##The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.
##73167176531330624919225119674426574742355349194934
##96983520312774506326239578318016984801869478851843
##85861560789112949495459501737958331952853208805511
##12540698747158523863050715693290963295227443043557
##66896648950445244523161731856403098711121722383113
##62229893423380308135336276614282806444486645238749
##30358907296290491560440772390713810515859307960866
##70172427121883998797908792274921901699720888093776
##65727333001053367881220235421809751254540594752243
##52584907711670556013604839586446706324415722155397
##53697817977846174064955149290862569321978468622482
##83972241375657056057490261407972968652414535100474
##82166370484403199890008895243450658541227588666881
##16427171479924442928230863465674813919123162824586
##17866458359124566529476545682848912883142607690042
##24219022671055626321111109370544217506941658960408
##07198403850962455444362981230987879927244284909188
##84580156166097919133875499200524063689912560717606
##05886116467109405077541002256983155200055935729725
##71636269561882670428252483600823257530420752963450
##Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?

numberSequence="""
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450""".replace('\n','')
splitedSequence=numberSequence.split('0')          #for every sequence production by 0 give to us 0 so we don't need them

result = 0

#function returns bigest 13 digit product for sequence 'num'
def maxProduct13Nums(num):
    #print('maxProduct13Nums entered with sequence: ',num,'len:',len(num))
    startIndex=0
    maxProduct=0
    notEnd = True
    
    #while didn't reached the end of sequence   
    while notEnd == True:
        if((len(num)-startIndex)<13):               #if reached last 13 nums sequence
            notEnd=False
        else:
            tempResult=1                            #drop temp result    
            for x in range(startIndex,startIndex+13):
                tempResult*=int(num[x])             #temporary result for every 13 digit length sequence           
            startIndex+=1
            if maxProduct < tempResult:             #save temporary if it is biggest
                maxProduct = tempResult
    return maxProduct

#function send all suitable sequences to function for get max product for every one         
for x in splitedSequence:
    if len(x)>12:
        maxProductX = maxProduct13Nums(x)
        if result < maxProductX:
            result = maxProductX
            
print("Thirteen adjacent digits in the 1000-digit number that have the greatest product is",result)

    
